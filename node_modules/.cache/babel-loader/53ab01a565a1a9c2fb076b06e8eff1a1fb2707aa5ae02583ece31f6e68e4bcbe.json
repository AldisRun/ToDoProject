{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport axios from 'axios';\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      tasks: [],\n      description: '',\n      status: 'todo'\n    };\n  },\n  mounted() {\n    this.getTasks();\n  },\n  methods: {\n    getTasks() {\n      axios({\n        method: 'get',\n        url: 'http://127.0.0.1:8000/tasks/',\n        auth: {\n          username: 'admin',\n          password: '12345'\n        }\n      }).then(response => this.tasks = response.data);\n    },\n    addTask() {\n      if (this.description) {\n        axios({\n          method: 'post',\n          url: 'http://127.0.0.1:8000/tasks/',\n          data: {\n            description: this.description,\n            status: this.status\n          },\n          auth: {\n            username: 'admin',\n            password: '12345'\n          }\n        }).then(response => {\n          let newTask = {\n            'id': response.data.id,\n            'description': this.description,\n            'status': this.status\n          };\n          this.tasks.push(newTask);\n          this.description = '';\n          this.status = 'todo';\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    },\n    setStatus(task_id, status) {\n      const task = this.tasks.filter(task => task.id === task_id)[0];\n      const description = task.description;\n      axios({\n        method: 'put',\n        url: 'http://127.0.0.1:8000/tasks/' + task_id + '/',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: {\n          status: status,\n          description: description\n        },\n        auth: {\n          username: 'admin',\n          password: '12345'\n        }\n      }).then(() => {\n        task.status = status;\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","tasks","description","status","mounted","getTasks","methods","method","url","auth","username","password","then","response","addTask","newTask","id","push","catch","error","console","log","setStatus","task_id","task","filter","headers"],"sources":["src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <h1 class=\"title\">Vuengo</h1>\n\n    <hr>\n\n    <div class=\"Columns\">\n      <div class=\"Column is-3 is-offset-3\">\n        <form v-on:submit.prevent=\"addTask\">\n          <h2 class=\"subtitle\">Add task</h2>\n\n          <div class=\"field\">\n            <label class=\"label\">Description</label>\n            <div class=\"control\">\n              <input class=\"input\" type=\"text\" v-model=\"description\">\n            </div>\n          </div>\n\n          <div class=\"field\">\n            <label class=\"label\">Status</label>\n            <div class=\"control\">\n              <div class=\"select\">\n                <select v-model=\"status\">\n                  <option value=\"todo\">To do</option>\n                  <option value=\"done\">Done</option>\n                </select>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"field\">\n            <div class=\"control\">\n              <button class=\"button is-link\">Submit</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n\n    <div class=\"columns\">\n      <div class=\"column is-6\">\n        <h2 class=\"subtitle\">To do</h2>\n\n        <div class=\"todo\">\n          <div class=\"card\" v-for=\"task in tasks\" v-if=\"task.status === 'todo'\" v-bind:key=\"task.id\">\n            <div class=\"card-content\">{{ task.description }}</div>\n\n            <footer class=\"card-footer\">\n              <a class=\"card-footer-item\" @click=\"setStatus(task.id, 'done')\">Done</a>\n            </footer>\n          </div>\n        </div>\n      </div>\n      <div class=\"column is-6\">\n        <h2 class=\"subtitle\">Done</h2>\n\n        <div class=\"todo\">\n          <div class=\"card\" v-for=\"task in tasks\" v-if=\"task.status === 'done'\" v-bind:key=\"task.id\">\n            <div class=\"card-content\">{{ task.description }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport axios from 'axios'\n\nexport default {\n  name: 'HomeView',\n  data () {\n    return {\n      tasks: [],\n      description: '',\n      status: 'todo'\n    }\n  },\n  mounted () {\n    this.getTasks()\n  },\n  methods: {\n    getTasks() {\n      axios({\n        method: 'get',\n        url: 'http://127.0.0.1:8000/tasks/',\n        auth: {\n          username: 'admin',\n          password: '12345'\n        }\n      }).then(response => this.tasks = response.data)\n    },\n    addTask() {\n      if (this.description) {\n        axios({\n          method: 'post',\n          url: 'http://127.0.0.1:8000/tasks/',\n          data: {\n            description: this.description,\n            status: this.status\n          },\n          auth: {\n            username: 'admin',\n            password: '12345'\n          }\n        }).then((response) => {\n          let newTask = {\n            'id': response.data.id,\n            'description': this.description,\n            'status': this.status\n          }\n\n          this.tasks.push(newTask)\n\n          this.description = ''\n          this.status = 'todo'\n        }).catch((error) => {\n          console.log(error)\n        })\n      }\n    },\n    setStatus(task_id, status) {\n      const task = this.tasks.filter(task => task.id === task_id)[0]\n      const description = task.description\n\n      axios({\n        method: 'put',\n        url: 'http://127.0.0.1:8000/tasks/' + task_id + '/',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        data: {\n          status: status,\n          description: description\n        },\n        auth: {\n          username: 'admin',\n          password: '12345'\n        }\n      }).then(() => {\n        task.status = status\n      })\n      \n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.select, select {\n  width: 100%;\n}\n\n.card {\n  margin-bottom: 20px;\n}\n\n.done {\n  opacity: 0.3;\n}\n</style>"],"mappings":";;;AAoEA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,WAAA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,QAAA;EACA;EACAC,OAAA;IACAD,SAAA;MACAP,KAAA;QACAS,MAAA;QACAC,GAAA;QACAC,IAAA;UACAC,QAAA;UACAC,QAAA;QACA;MACA,GAAAC,IAAA,CAAAC,QAAA,SAAAZ,KAAA,GAAAY,QAAA,CAAAb,IAAA;IACA;IACAc,QAAA;MACA,SAAAZ,WAAA;QACAJ,KAAA;UACAS,MAAA;UACAC,GAAA;UACAR,IAAA;YACAE,WAAA,OAAAA,WAAA;YACAC,MAAA,OAAAA;UACA;UACAM,IAAA;YACAC,QAAA;YACAC,QAAA;UACA;QACA,GAAAC,IAAA,CAAAC,QAAA;UACA,IAAAE,OAAA;YACA,MAAAF,QAAA,CAAAb,IAAA,CAAAgB,EAAA;YACA,oBAAAd,WAAA;YACA,eAAAC;UACA;UAEA,KAAAF,KAAA,CAAAgB,IAAA,CAAAF,OAAA;UAEA,KAAAb,WAAA;UACA,KAAAC,MAAA;QACA,GAAAe,KAAA,CAAAC,KAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;QACA;MACA;IACA;IACAG,UAAAC,OAAA,EAAApB,MAAA;MACA,MAAAqB,IAAA,QAAAvB,KAAA,CAAAwB,MAAA,CAAAD,IAAA,IAAAA,IAAA,CAAAR,EAAA,KAAAO,OAAA;MACA,MAAArB,WAAA,GAAAsB,IAAA,CAAAtB,WAAA;MAEAJ,KAAA;QACAS,MAAA;QACAC,GAAA,mCAAAe,OAAA;QACAG,OAAA;UACA;QACA;QACA1B,IAAA;UACAG,MAAA,EAAAA,MAAA;UACAD,WAAA,EAAAA;QACA;QACAO,IAAA;UACAC,QAAA;UACAC,QAAA;QACA;MACA,GAAAC,IAAA;QACAY,IAAA,CAAArB,MAAA,GAAAA,MAAA;MACA;IAEA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}